# Basic configurations for a debian server.
#
# Manage APT confs, debian specific behavior/utilities,
# locale, timezone, NTP, ecc
#
# For host without python or python-apt, run this:
# ansible -m raw -a "apt-get update ; apt-get -qq -y install python python-apt" HOST
#
#
# Copyright (C) 2012 Calogero Lo Leggio <kalos@nerdrug.org>
#
# This part of software is released under the terms of the GPLv3 license.
#
---
# { manage base packages
- name: base packages to install
  apt: state=installed name=$item
  with_items:
    - locales
    - less
    - ncurses-term
    - logwatch
    - rsync
    - vim
  tags:
    - packages

- name: base packages to remove
  apt: state=removed purge=yes name=$item
  with_items:
    - vim-tiny
  tags:
    - packages
# }

# { locale and timezone
- name: create locale.gen
  template: src=templates/locale.gen.j2 dest=/etc/locale.gen
  when_boolean: $lang
  notify:
    - update locale-gen
  tags:
    - locale

- name: configure locale (with UTF-8 charset)
  template: src=templates/locale.j2 dest=/etc/default/locale
  when_boolean: $lang
  notify:
    - update locale
  tags:
    - locale

- name: create timezone file
  template: src=templates/timezone.j2 dest=/etc/timezone
  when_boolean: $timezone
  notify:
    - update timezone
# }

# { NTP
- name: install ntpdate
  apt: name=ntpdate state=installed
  register: ntpdate
  tags:
    - packages

- name: exec ntpdate
  command: ntpdate-debian
  when_boolean: ${ntpdate.changed}

- name: install NTP deamon
  apt: name=ntp state=installed
  tags:
    - packages

- name: NTP should be running
  service: name=ntp state=running enabled=yes
# }

# { APT base
- name: copy APT sources list
  copy: >
    src=files/sources.list dest=/etc/apt/
    owner=root mode=644
  register: apt_sources

- name: update apt list
  apt: update-cache=yes
  when_boolean: ${apt_sources.changed}

- name: copy configuration files for APT
  copy: src=$item dest=/etc/apt/apt.conf.d/ owner=root mode=644
  with_fileglob: files/apt.conf.d/*

- name: create pre-seed directory
  file: > 
    state=directory path=/usr/local/preseed
    owner=root group=root mode=600
# }

# { disable dash as default shell
- name: dash config
  copy: >
    src=files/preseed/dash
    dest=/usr/local/preseed/
    owner=root mode=600
  register: dash_seed

- name: dash set preseed - disable as default shell
  command: debconf-set-selections /usr/local/preseed/dash
  when_boolean: ${dash_seed.changed}
  notify:
    - dash reconfigure
# }

# { disable dbconfig-common to manage db
- name: copy dbconfig-common preseed
  copy: >
    src=files/preseed/dbconfig-common
    dest=/usr/local/preseed/
    owner=root mode=600
  register: dbconfig_seed

- name: set dbconfig-common preseed - disable dbconfig-common to manage db
  command: debconf-set-selections /usr/local/preseed/dbconfig-common
  when_boolean: ${dbconfig_seed.changed}

- name: install dbconfig-common
  apt: state=installed name=dbconfig-common
# }

- name: install unattended-upgrades
  apt: state=installed name=unattended-upgrades
  when_boolean: $enable_unattended_upgrades
  tags:
    - packages

- name: install debian/APT specific packages
  apt: state=installed name=$item
  with_items:
    - apticron
    - apt-listchanges
    - etckeeper
    - popularity-contest
  tags:
    - packages

- name: configure apt-listchanges
  copy: >
    src=files/listchanges.conf dest=/etc/apt/
    owner=root mode=644

- name: enable popularity-contest
  lineinfile: >
    dest=/etc/popularity-contest.conf
    regexp=^PARTICIPATE= line=PARTICIPATE="yes"

- name: install system utilities
  apt: state=installed name=$item
  with_items:
    - psmisc
    - htop 
    - iotop
  tags:
    - packages
